<?xml version="1.0" encoding="UTF-8"?>

<mule xmlns:dw="http://www.mulesoft.org/schema/mule/ee/dw"
	xmlns:jdbc-ee="http://www.mulesoft.org/schema/mule/ee/jdbc"
	xmlns:metadata="http://www.mulesoft.org/schema/mule/metadata"
	xmlns:data-mapper="http://www.mulesoft.org/schema/mule/ee/data-mapper"
	xmlns:google-contacts="http://www.mulesoft.org/schema/mule/google-contacts"
	xmlns:json="http://www.mulesoft.org/schema/mule/json" xmlns:sfdc="http://www.mulesoft.org/schema/mule/sfdc"
	xmlns:jms="http://www.mulesoft.org/schema/mule/jms" xmlns:file="http://www.mulesoft.org/schema/mule/file"
	xmlns:db="http://www.mulesoft.org/schema/mule/db" xmlns:ws="http://www.mulesoft.org/schema/mule/ws"
	xmlns:mulexml="http://www.mulesoft.org/schema/mule/xml" xmlns:tracking="http://www.mulesoft.org/schema/mule/ee/tracking"
	xmlns:http="http://www.mulesoft.org/schema/mule/http" xmlns="http://www.mulesoft.org/schema/mule/core"
	xmlns:doc="http://www.mulesoft.org/schema/mule/documentation"
	xmlns:spring="http://www.springframework.org/schema/beans" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-current.xsd
http://www.mulesoft.org/schema/mule/core http://www.mulesoft.org/schema/mule/core/current/mule.xsd
http://www.mulesoft.org/schema/mule/http http://www.mulesoft.org/schema/mule/http/current/mule-http.xsd
http://www.mulesoft.org/schema/mule/ee/tracking http://www.mulesoft.org/schema/mule/ee/tracking/current/mule-tracking-ee.xsd
http://www.mulesoft.org/schema/mule/ws http://www.mulesoft.org/schema/mule/ws/current/mule-ws.xsd
http://www.mulesoft.org/schema/mule/xml http://www.mulesoft.org/schema/mule/xml/current/mule-xml.xsd
http://www.mulesoft.org/schema/mule/db http://www.mulesoft.org/schema/mule/db/current/mule-db.xsd
http://www.mulesoft.org/schema/mule/file http://www.mulesoft.org/schema/mule/file/current/mule-file.xsd
http://www.mulesoft.org/schema/mule/jms http://www.mulesoft.org/schema/mule/jms/current/mule-jms.xsd
http://www.mulesoft.org/schema/mule/sfdc http://www.mulesoft.org/schema/mule/sfdc/current/mule-sfdc.xsd
http://www.mulesoft.org/schema/mule/json http://www.mulesoft.org/schema/mule/json/current/mule-json.xsd
http://www.mulesoft.org/schema/mule/google-contacts http://www.mulesoft.org/schema/mule/google-contacts/current/mule-google-contacts.xsd
http://www.mulesoft.org/schema/mule/ee/dw http://www.mulesoft.org/schema/mule/ee/dw/current/dw.xsd
http://www.mulesoft.org/schema/mule/ee/data-mapper http://www.mulesoft.org/schema/mule/ee/data-mapper/current/mule-data-mapper.xsd
http://www.mulesoft.org/schema/mule/ee/jdbc http://www.mulesoft.org/schema/mule/ee/jdbc/current/mule-jdbc-ee.xsd">
    <flow name="getFlightsFromFormFlow">
        <http:listener config-ref="HTTP_Listener_Configuration" path="/flights" allowedMethods="POST" doc:name="HTTP"/>
        <json:json-to-object-transformer returnClass="com.mulesoft.training.FlightRequest" doc:name="JSON to Object"/>
        <flow-ref name="getFlightsFlow" doc:name="getFlightsFlow"/>
    </flow>


	<flow name="getFlightsFlow">
		<set-variable variableName="destination" value="#[payload.destination]"
			doc:name="Set Destination" />
		<logger level="INFO" doc:name="Logger" message="#[message]" />
        <choice doc:name="Choice">
            <when expression="#[payload.airline == 'all']">
                <flow-ref name="getAllAirlinesFlightsFlow" doc:name="getAllAirlinesFlightsFlow"/>
            </when>
            <when expression="#[payload.airline == 'united']">
                <flow-ref name="getUnitedFlightsFlow" doc:name="getUnitedFlightsFlow"/>
            </when>
            <when expression="#[payload.airline == 'delta']">
                <flow-ref name="getDeltaFlightsFlow" doc:name="getDeltaFlightsFlow"/>
            </when>
            <otherwise>
                <logger level="INFO" doc:name="Logger"/>
            </otherwise>
        </choice>
        <expression-filter expression="#[payload[0] is com.mulesoft.training.Flight]" doc:name="Filter No Results"/>
		<custom-transformer class="com.mulesoft.training.FlightSortTransformer"
			doc:name="Sort by Price" />
		<json:object-to-json-transformer
			doc:name="Object to JSON" />
        <response>
            <logger level="INFO" doc:name="Logger"/>
        </response>
	</flow>
	<flow name="getDeltaFlightsFlow">
		<http:listener config-ref="HTTP_Listener_Configuration"
			path="/delta" allowedMethods="GET" doc:name="HTTP" />
		<set-variable variableName="destination"
			value="#[(flowVars.destination ==empty &amp;&amp; message.inboundProperties.'http.query.params'.code == empty) ? 'SFO' :(flowVars.destination != empty ? flowVars.destination : message.inboundProperties.'http.query.params'.code)]"
			doc:name="Set Destination" />
		<data-mapper:transform config-ref="String_To_Xml_findFlight_"
			input-ref="#[message.inboundProperties[&quot;http.method&quot;]]"
			doc:name="String To Xml&lt;findFlight&gt; (Deprecated)">
			<data-mapper:input-arguments>
				<data-mapper:input-argument key="destination">#[flowVars.destination]</data-mapper:input-argument>
			</data-mapper:input-arguments>
		</data-mapper:transform>
		<ws:consumer config-ref="Delta_Web_Service_Consumer"
			operation="findFlight" doc:name="Delta SOAP Request" />
		<mulexml:jaxb-xml-to-object-transformer
			returnClass="com.mulesoft.training.FlightArray" jaxbContext-ref="JAXB_Context"
			doc:name="XML to JAXB Object" />
        <expression-filter expression="#[payload.flights != null]" doc:name="Filter No Results"/>
		<set-payload value="#[payload.flights]" doc:name="Collection of Flights" />
		<logger level="INFO" doc:name="Logger" />
	</flow>

	<flow name="getFlightFormFlow">
        <http:listener config-ref="HTTP_Listener_Configuration" path="/flights" allowedMethods="GET" doc:name="HTTP"/>
		<parse-template location="FlightFinder.html" doc:name="Parse Template" />
        <response>
            <logger level="INFO" doc:name="Logger"/>
        </response>
	</flow>
	<flow name="getAllAirlinesFlightsFlow">
		<scatter-gather doc:name="Scatter-Gather">
            <processor-chain>
                <flow-ref name="getUnitedFlightsFlow" doc:name="getUnitedFlightsFlow"/>
                <filter ref="Filter_Not_ArrayList" doc:name="Filter not an ArrayList"/>
            </processor-chain>
            <processor-chain>
                <flow-ref name="getDeltaFlightsFlow" doc:name="getDeltaFlightsFlow"/>
                <filter ref="Filter_Not_ArrayList" doc:name="Filter not an ArrayList"/>
            </processor-chain>
		</scatter-gather>
		<combine-collections-transformer
			doc:name="Combine Collections" />
	</flow>
	<flow name="getUnitedFlightsFlow">
		<http:listener config-ref="HTTP_Listener_Configuration"
			path="/united" allowedMethods="GET" doc:name="HTTP" />
		<set-variable variableName="destination"
			value="#[(flowVars.destination ==empty &amp;&amp; message.inboundProperties.'http.query.params'.code == empty) ? 'SFO' :(flowVars.destination != empty ? flowVars.destination : message.inboundProperties.'http.query.params'.code)]"
			doc:name="Set Destination" />
		<http:request config-ref="United_REST_Request_Configuration"
			path="/{destination}/" method="GET" doc:name="United REST Request">
			<http:request-builder>
                <http:uri-param paramName="destination" value="#[flowVars.destination]"/>
			</http:request-builder>
		</http:request>
        <expression-filter expression="#[payload.available() != 0]" doc:name="Filter No Results"/>
		<json:json-to-object-transformer
			returnClass="com.mulesoft.training.FlightArray" doc:name="JSON to Object" />
		<set-payload value="#[payload.flights]" doc:name="Collection of Flights" />
		<logger message="#[message.payload]" level="INFO" doc:name="Logger" />
	</flow>
</mule>
